[{"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\index.js":"1","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\App.js":"2","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\home.js":"3","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\Navigation\\Header.js":"4","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\Navigation\\headerItems.js":"5","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\Styles\\GreyButtonHover.js":"6","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\AboutMe\\AboutMe.js":"7","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\HomePage\\HomePage.js":"8","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\Home.js":"9","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\ScrollableElement\\ScrollableElement.js":"10","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\IntersectionObserver\\index.js":"11","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\DynamicModule\\index.js":"12","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\DynamicModule\\delay.js":"13","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\Styles\\Placeholder.js":"14","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\Styles\\Card\\Card.js":"15","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\Styles\\Card\\VoteCount.js":"16","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\BlockJumpingGame\\app.js":"17","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\Navigation\\VerticalMenu.js":"18","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\Projects\\project1.js":"19","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\Projects\\project2.js":"20","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\Projects\\project0.js":"21","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\Form\\ContactForm.js":"22","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\axios-connect.js":"23","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\iconMenu\\IconMenu.js":"24","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\SideBar\\SideBar.js":"25","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\Projects\\WProject2.js":"26","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\Projects\\AControls.js":"27","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\Projects\\AProject1.js":"28","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\Projects\\AGrid.js":"29","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\Projects\\AProject0.js":"30","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\Projects\\AProject2.js":"31","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\Projects\\WProject0.js":"32","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\Utils\\AndroidPlaceholder.js":"33","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\Utils\\WebPlaceholder.js":"34"},{"size":330,"mtime":1614727646954,"results":"35","hashOfConfig":"36"},{"size":18053,"mtime":1631314662555,"results":"37","hashOfConfig":"36"},{"size":2128,"mtime":1611799499814,"results":"38","hashOfConfig":"36"},{"size":2099,"mtime":1611775711667,"results":"39","hashOfConfig":"36"},{"size":592,"mtime":1611355663598,"results":"40","hashOfConfig":"36"},{"size":661,"mtime":1611380357950,"results":"41","hashOfConfig":"36"},{"size":2558,"mtime":1631575735224,"results":"42","hashOfConfig":"36"},{"size":1155,"mtime":1611796449416,"results":"43","hashOfConfig":"36"},{"size":4748,"mtime":1631296620844,"results":"44","hashOfConfig":"36"},{"size":925,"mtime":1612369251194,"results":"45","hashOfConfig":"36"},{"size":1515,"mtime":1612382208486,"results":"46","hashOfConfig":"36"},{"size":9907,"mtime":1631397047414,"results":"47","hashOfConfig":"36"},{"size":237,"mtime":1612484395650,"results":"48","hashOfConfig":"36"},{"size":353,"mtime":1615415413044,"results":"49","hashOfConfig":"36"},{"size":4707,"mtime":1617134290504,"results":"50","hashOfConfig":"36"},{"size":2064,"mtime":1614203436661,"results":"51","hashOfConfig":"36"},{"size":4681,"mtime":1615416316673,"results":"52","hashOfConfig":"36"},{"size":4078,"mtime":1617134206603,"results":"53","hashOfConfig":"36"},{"size":4966,"mtime":1631570020084,"results":"54","hashOfConfig":"36"},{"size":1871,"mtime":1631571004388,"results":"55","hashOfConfig":"36"},{"size":1314,"mtime":1631563775759,"results":"56","hashOfConfig":"36"},{"size":3016,"mtime":1631223302306,"results":"57","hashOfConfig":"36"},{"size":675,"mtime":1616024021808,"results":"58","hashOfConfig":"36"},{"size":5015,"mtime":1617134949071,"results":"59","hashOfConfig":"36"},{"size":4226,"mtime":1617134924449,"results":"60","hashOfConfig":"36"},{"size":5892,"mtime":1631571414281,"results":"61","hashOfConfig":"36"},{"size":2547,"mtime":1631222171688,"results":"62","hashOfConfig":"36"},{"size":2002,"mtime":1631234986816,"results":"63","hashOfConfig":"36"},{"size":5026,"mtime":1631573007849,"results":"64","hashOfConfig":"36"},{"size":2252,"mtime":1631560464866,"results":"65","hashOfConfig":"36"},{"size":2029,"mtime":1631231337060,"results":"66","hashOfConfig":"36"},{"size":6293,"mtime":1631572665155,"results":"67","hashOfConfig":"36"},{"size":2217,"mtime":1631398047490,"results":"68","hashOfConfig":"36"},{"size":1170,"mtime":1631567025139,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1uftvxx",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\index.js",[],["150","151"],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\App.js",[],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\home.js",[],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\Navigation\\Header.js",["152"],"import React, { Component } from 'react';\r\nimport { Menu, Button, Container } from 'semantic-ui-react';\r\nimport GreyButtonHover from '../Styles/GreyButtonHover';\r\nimport classes from './Header.css';\r\n\r\nexport default class Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeItem: 'Home',\r\n      buttonHover: false,\r\n      buttonColor: 'grey',\r\n    };\r\n  }\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n\r\n  render() {\r\n    const { activeItem } = this.state;\r\n\r\n    return (\r\n      <Container>\r\n        <Button\r\n          onMouseEnter={() => this.setState({ buttonColor: 'black'})}\r\n          onMouseLeave={() => this.setState({ buttonColor: 'grey'})}\r\n          onMouseDown={() => this.setState({buttonColor: 'red'})}\r\n          floated=\"right\"\r\n          basic\r\n          color={this.state.buttonColor}\r\n        >\r\n          Resume\r\n        </Button>\r\n        <Menu text borderless floated=\"right\">\r\n          <Menu.Item\r\n            name=\"Home\"\r\n            pathname=\"/\"\r\n            active={activeItem === 'Home'}\r\n            onClick={this.handleItemClick}\r\n          >\r\n            <p>01.Home</p>\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            name=\"About\"\r\n            pathname=\"/About\"\r\n            className={classes.menu}\r\n            active={activeItem === 'About'}\r\n            onClick={this.handleItemClick}\r\n          >\r\n            <p>02.About</p>\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            name=\"Projects\"\r\n            pathname=\"/Projects\"\r\n            className={classes.menu}\r\n            active={activeItem === 'Projects'}\r\n            onClick={this.handleItemClick}\r\n          >\r\n            <p>03.Projects</p>\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            name=\"Contact\"\r\n            pathname=\"/Contact\"\r\n            className={classes.menu}\r\n            active={activeItem === 'Contact'}\r\n            onClick={this.handleItemClick}\r\n          >\r\n            <p>04.Contact</p>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n",["153","154"],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\Navigation\\headerItems.js",[],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\Styles\\GreyButtonHover.js",["155"],"import React, { useState, Component } from 'react';\r\nimport { Container, Button } from 'semantic-ui-react';\r\n\r\nconst GreyButtonHover = () => {\r\n  const [hover, setHover] = useState(false);\r\n\r\n  let color;\r\n\r\n  const toggleHover = () => {\r\n    setHover(true);\r\n\r\n    if (hover === true) {\r\n      color = {\r\n        backgroundColor: 'grey',\r\n      };\r\n    } else {\r\n      color = {\r\n        backgroundColor: 'white',\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Button\r\n        style={color}\r\n        onMouseEnter={toggleHover}\r\n        onMouseLeave={!toggleHover}\r\n      ></Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GreyButtonHover;\r\n","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\AboutMe\\AboutMe.js",[],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\HomePage\\HomePage.js",["156","157"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './HomePage.css';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { Container } from 'semantic-ui-react';\r\n\r\nimport Home from '../Home';\r\nimport AboutMe from '../AboutMe/AboutMe';\r\n\r\nconst pages = [<Home />, <AboutMe />];\r\n\r\nclass HomePage extends React.Component {\r\n  state = {\r\n    items: Array.from({ length: 1 }),\r\n  };\r\n\r\n  fetchMoreData = () => {\r\n    setTimeout(() => {\r\n      this.setState({\r\n        items: this.state.items.concat(Array.from({ length: 1 })),\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <InfiniteScroll\r\n          className=\"infiniteScroll\"\r\n          dataLength={this.state.items.length}\r\n          next={this.fetchMoreData}\r\n          hasMore={true}\r\n        >\r\n          {this.state.items.map(\r\n            (i, index) => (\r\n              (\r\n                <Container key={index}>\r\n                  {pages[index]}\r\n                </Container>\r\n              )\r\n            )\r\n          )}\r\n        </InfiniteScroll>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n",["158","159"],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\Home.js",[],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\ScrollableElement\\ScrollableElement.js",["160","161","162","163"],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\IntersectionObserver\\index.js",[],["164","165"],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\DynamicModule\\index.js",[],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\DynamicModule\\delay.js",[],["166","167"],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\Styles\\Placeholder.js",[],["168","169"],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\Styles\\Card\\Card.js",[],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\Styles\\Card\\VoteCount.js",[],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\BlockJumpingGame\\app.js",[],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\Navigation\\VerticalMenu.js",[],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\Projects\\project1.js",[],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\Projects\\project2.js",[],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\Projects\\project0.js",[],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\Form\\ContactForm.js",[],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\axios-connect.js",[],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\iconMenu\\IconMenu.js",[],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\SideBar\\SideBar.js",[],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\Projects\\WProject2.js",[],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\Projects\\AControls.js",["170","171"],"import React, { useState } from 'react';\r\nimport { Button, Header, Segment } from 'semantic-ui-react';\r\n\r\nimport './projects.css';\r\nimport AndroidGrid from './AGrid'\r\n\r\nfunction AControls(props) {\r\n  const [nextColor, setNextColor] = useState(null);\r\n  const [nextBasic, setNextBasic] = useState(true);\r\n  // const [gif, setGif] = useState(SevenMinuteWorkout)\r\n\r\n  const [viewProjectsColor, setViewProjectsColor] = useState(null);\r\n  const [viewProjectsBasic, setViewProjectsBasic] = useState(true);\r\n\r\n  const [prevColor, setPrevColor] = useState(null);\r\n  const [prevBasic, setPrevBasic] = useState(true);\r\n\r\n  const nextClick = () => {\r\n    // const project = <AndroidGrid switchAProject/>\r\n    setNextBasic(false);\r\n    // setGif(MonsterKiller)\r\n  };\r\n\r\n  const viewProjectsClick = () => {\r\n    setViewProjectsBasic(false);\r\n  };\r\n\r\n  const prevClick = () => {\r\n    setPrevBasic(false);\r\n  };\r\n\r\n  return (\r\n    <Segment className=\"project3Container\">\r\n      <Segment\r\n        style={{\r\n          margin: '5vh 0',\r\n          padding: '3vh 0',\r\n          boxShadow: 'none',\r\n          border: 'none',\r\n        }}\r\n        textAlign=\"center\"\r\n      >\r\n        <Button.Group color=\"black\">\r\n          <Button\r\n            style={{ padding: '.05vh 0 0 0', backgroundColor: '#1B1C1D' }}\r\n            labelPosition=\"left\"\r\n            icon=\"left chevron\"\r\n            content=\"Previous\"\r\n            basic={prevBasic}\r\n            color={prevColor}\r\n            onMouseDown={() => prevClick()}\r\n            onMouseEnter={() => setPrevColor('black')}\r\n            onMouseLeave={() => setPrevColor(null)}\r\n            onMouseUp={() => setPrevBasic(true)}\r\n          />\r\n          <Button\r\n            content=\"View Web Projects\"\r\n            basic={viewProjectsBasic}\r\n            color={viewProjectsColor}\r\n            onMouseDown={() => viewProjectsClick()}\r\n            onMouseEnter={() => setViewProjectsColor('black')}\r\n            onMouseLeave={() => setViewProjectsColor(null)}\r\n            onMouseUp={() => setViewProjectsBasic(true)}\r\n          />\r\n          <Button\r\n            labelPosition=\"right\"\r\n            icon=\"right chevron\"\r\n            content=\"Next\"\r\n            basic={nextBasic}\r\n            color={nextColor}\r\n            onMouseDown={() => nextClick()}\r\n            onMouseEnter={() => setNextColor('black')}\r\n            onMouseLeave={() => setNextColor(null)}\r\n            onMouseUp={() => setNextBasic(true)}\r\n          />\r\n        </Button.Group>\r\n      </Segment>\r\n    </Segment>\r\n  );\r\n}\r\n\r\nexport default AControls;\r\n",["172","173"],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\Projects\\AProject1.js",[],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\Projects\\AGrid.js",["174"],"import React, { Suspense, useState, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  Segment,\r\n  Grid,\r\n  Container,\r\n  Icon,\r\n  Transition,\r\n  Label,\r\n} from 'semantic-ui-react';\r\n\r\nimport AndroidPlaceholder from '../../Utils/AndroidPlaceholder';\r\n\r\nimport './projects.css';\r\n\r\nimport AProject0 from './AProject0';\r\nimport AProject1 from './AProject1';\r\nimport AProject2 from './AProject2';\r\n\r\nfunction Projects(props) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [unmount, setUnmount] = useState(false);\r\n\r\n  const [nextColor, setNextColor] = useState(null);\r\n  const [nextBasic, setNextBasic] = useState(true);\r\n  const [nextAccess, setNextAccess] = useState(true);\r\n\r\n  const [prevColor, setPrevColor] = useState(null);\r\n  const [prevAccess, setPrevAccess] = useState(false);\r\n  const [prevBasic, setPrevBasic] = useState(true);\r\n\r\n  const projectList = [<AProject0 />, <AProject1 />, <AProject2 />];\r\n  const [project, setProject] = useState(<AProject0 />);\r\n  const [projectIdx, setProjectIdx] = useState(0);\r\n\r\n  const nextClick = () => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1000);\r\n\r\n    if (projectIdx < projectList.length - 2) {\r\n      setProject(projectList[projectIdx + 1]);\r\n      setProjectIdx(projectIdx + 1);\r\n      setPrevAccess(true);\r\n    } else {\r\n      setProject(projectList[projectList.length - 1]);\r\n      setProjectIdx(projectList.length - 1);\r\n      setNextAccess(false);\r\n    }\r\n  };\r\n\r\n  const prevClick = () => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1000);\r\n\r\n    if (projectIdx > 1) {\r\n      setProject(projectList[projectIdx - 1]);\r\n      setProjectIdx(projectIdx - 1);\r\n      setNextAccess(true);\r\n    } else {\r\n      setProject(projectList[0]);\r\n      setProjectIdx(0);\r\n      setPrevAccess(false);\r\n    }\r\n  };\r\n  const handleHideNext = () => {\r\n    setNextColor(null);\r\n  };\r\n\r\n  const handleHidePrev = () => {\r\n    setPrevColor(null);\r\n  };\r\n\r\n  const hideButtons = () => {\r\n    handleHideNext();\r\n    handleHidePrev();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.dProjectVisible !== 'Android') {\r\n      setUnmount(true);\r\n    } else if (props.dProjectVisible === 'Android') {\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n        setUnmount(false);\r\n      }, 1500);\r\n    }\r\n  }, [props.dProjectVisible]);\r\n\r\n  return (\r\n    <Segment className=\"AndroidContainer\">\r\n      <Transition transitionOnMount duration={500}>\r\n        <Container>\r\n          <Grid container>\r\n            <Grid.Row>\r\n              <p className=\"projectsSpecialColor\">03. Android Projects</p>\r\n              <Icon\r\n                name=\"android\"\r\n                style={{ margin: '0 1vw' }}\r\n                color=\"green\"\r\n                size=\"large\"\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Container>\r\n      </Transition>\r\n      <Transition visible={!unmount} duration={1500}>\r\n        <Grid container className=\"AndroidGrid\">\r\n          <Grid.Row verticalAlign=\"middle\" centered columns={3}>\r\n            <Grid.Column mobile={1} textAlign=\"right\">\r\n              {prevAccess ? (\r\n                <Button\r\n                  style={{ boxShadow: 'none' }}\r\n                  icon=\"left chevron\"\r\n                  basic={prevBasic}\r\n                  color={prevColor}\r\n                  onMouseDown={() => prevClick()}\r\n                  onMouseUp={() => setPrevBasic(true)}\r\n                />\r\n              ) : (\r\n                <Button\r\n                  style={{ boxShadow: 'none' }}\r\n                  icon=\"left chevron\"\r\n                  basic\r\n                  disabled\r\n                />\r\n              )}\r\n            </Grid.Column>\r\n            <Grid.Column\r\n              as={Segment}\r\n              style={{ boxShadow: 'none', border: 'none' }}\r\n              onMouseLeave={() => hideButtons()}\r\n              loading={loading}\r\n              computer={5}\r\n              mobile={10}\r\n            >\r\n              {loading ? (\r\n                <AndroidPlaceholder />\r\n              ) : (\r\n                <Suspense fallback={AndroidPlaceholder}>\r\n                  <Container>{project}</Container>\r\n                </Suspense>\r\n              )}\r\n            </Grid.Column>\r\n            <Grid.Column mobile={1}>\r\n              {nextAccess ? (\r\n                <Button\r\n                  icon=\"right chevron\"\r\n                  style={{ boxShadow: 'none' }}\r\n                  basic={nextBasic}\r\n                  color={nextColor}\r\n                  onMouseDown={() => nextClick()}\r\n                  onMouseUp={() => setNextBasic(true)}\r\n                />\r\n              ) : (\r\n                <Button\r\n                  style={{ boxShadow: 'none' }}\r\n                  icon=\"right chevron\"\r\n                  basic\r\n                  disabled\r\n                />\r\n              )}\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Transition>\r\n    </Segment>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n","C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\Projects\\AProject0.js",[],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\Projects\\AProject2.js",[],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\components\\Projects\\WProject0.js",[],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\Utils\\AndroidPlaceholder.js",[],"C:\\Users\\Richard\\GitProjects\\portfolio\\portfolio\\src\\Utils\\WebPlaceholder.js",[],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":23},{"ruleId":"175","replacedBy":"183"},{"ruleId":"177","replacedBy":"184"},{"ruleId":"179","severity":1,"message":"185","line":1,"column":27,"nodeType":"181","messageId":"182","endLine":1,"endColumn":36},{"ruleId":"179","severity":1,"message":"186","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":18},{"ruleId":"179","severity":1,"message":"187","line":2,"column":20,"nodeType":"181","messageId":"182","endLine":2,"endColumn":29},{"ruleId":"175","replacedBy":"188"},{"ruleId":"177","replacedBy":"189"},{"ruleId":"179","severity":1,"message":"186","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"187","line":1,"column":27,"nodeType":"181","messageId":"182","endLine":1,"endColumn":36},{"ruleId":"179","severity":1,"message":"190","line":1,"column":38,"nodeType":"181","messageId":"182","endLine":1,"endColumn":44},{"ruleId":"179","severity":1,"message":"191","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":23},{"ruleId":"175","replacedBy":"192"},{"ruleId":"177","replacedBy":"193"},{"ruleId":"175","replacedBy":"194"},{"ruleId":"177","replacedBy":"195"},{"ruleId":"175","replacedBy":"196"},{"ruleId":"177","replacedBy":"197"},{"ruleId":"179","severity":1,"message":"198","line":2,"column":18,"nodeType":"181","messageId":"182","endLine":2,"endColumn":24},{"ruleId":"179","severity":1,"message":"199","line":5,"column":8,"nodeType":"181","messageId":"182","endLine":5,"endColumn":19},{"ruleId":"175","replacedBy":"200"},{"ruleId":"177","replacedBy":"201"},{"ruleId":"179","severity":1,"message":"202","line":9,"column":3,"nodeType":"181","messageId":"182","endLine":9,"endColumn":8},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"no-unused-vars","'GreyButtonHover' is defined but never used.","Identifier","unusedVar",["203"],["204"],"'Component' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.",["203"],["204"],"'useRef' is defined but never used.","'CSSTransition' is defined but never used.",["203"],["204"],["203"],["204"],["203"],["204"],"'Header' is defined but never used.","'AndroidGrid' is defined but never used.",["203"],["204"],"'Label' is defined but never used.","no-global-assign","no-unsafe-negation"]